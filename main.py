import telebot
from telebot import types

bot = telebot.TeleBot("8045858681:AAE5X-WBhgFkwcKSvLfeHYWGqAWCB6RCdds")
CHANNEL_USERNAME = "https://t.me/newcastlecity1"  # —É–∫–∞–∂–∏ —é–∑–µ—Ä–Ω–µ–π–º –∫–∞–Ω–∞–ª–∞ —Å @

def is_subscribed(user_id):
    try:
        member = bot.get_chat_member(CHANNEL_USERNAME, user_id)
        # –°—Ç–∞—Ç—É—Å—ã: "member", "creator", "administrator" —Å—á–∏—Ç–∞—é—Ç—Å—è –ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã–º–∏
        if member.status in ["member", "creator", "administrator"]:
            return True
        else:
            return False
    except Exception as e:
        # –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å ‚Äî —Å—á–∏—Ç–∞–µ–º –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã–º
        return False

@bot.message_handler(commands=['start'])
def start(message):
    if not is_subscribed(message.from_user.id):
        markup = types.InlineKeyboardMarkup()
        markup.add(types.InlineKeyboardButton("–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª", url=f"https://t.me/{CHANNEL_USERNAME[1:]}"))
        bot.send_message(
            message.chat.id,
            "‚ùóÔ∏è –ß—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ—Ç–∞, –ø–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª.",
            reply_markup=markup
        )
        return

    welcome_text = (
        f"–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}! üëã\n"
        "–¢—ã –ø–æ–ø–∞–ª –≤ –∏–≥—Ä—É Newcastle City –ö–†–ú–ü ‚Äî –¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!\n\n"
        "–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ:"
    )
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.row("üöó –ê–≤—Ç–æ—Å–∞–ª–æ–Ω", "üöò –ì–∞—Ä–∞–∂")
    markup.row("üíº –ü—Ä–æ—Ñ–∏–ª—å")

    bot.send_message(message.chat.id, welcome_text, reply_markup=markup)

@bot.message_handler(func=lambda message: True)
def menu_handler(message):
    if not is_subscribed(message.from_user.id):
        markup = types.InlineKeyboardMarkup()
        markup.add(types.InlineKeyboardButton("–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª", url=f"https://t.me/{CHANNEL_USERNAME[1:]}"))
        bot.send_message(
            message.chat.id,
            "‚ùóÔ∏è –ß—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ—Ç–∞, –ø–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª.",
            reply_markup=markup
        )
        return

    if message.text == "üöó –ê–≤—Ç–æ—Å–∞–ª–æ–Ω":
        bot.send_message(message.chat.id, "–û—Ç–∫—Ä—ã–≤–∞—é –∞–≤—Ç–æ—Å–∞–ª–æ–Ω... (–∑–¥–µ—Å—å –±—É–¥–µ—Ç —Å–ø–∏—Å–æ–∫ –º–∞—à–∏–Ω)")
    elif message.text == "üöò –ì–∞—Ä–∞–∂":
        bot.send_message(message.chat.id, "–ó–∞–≥—Ä—É–∂–∞—é —Ç–≤–æ–π –≥–∞—Ä–∞–∂... (–∑–¥–µ—Å—å –±—É–¥—É—Ç —Ç–≤–æ–∏ –º–∞—à–∏–Ω—ã)")
    elif message.text == "üíº –ü—Ä–æ—Ñ–∏–ª—å":
        bot.send_message(message.chat.id, f"–ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.from_user.first_name}")
    else:
        bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é.")

bot.polling()
