import os
from aiogram import Bot, Dispatcher, types
from aiogram.utils import executor
import requests

# –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ–∫–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–ª–∏ –Ω–∞–ø—Ä—è–º—É—é
API_TOKEN = os.getenv("API_TOKEN") or "7646694075:AAHT0lVmi2rDDoErrCfK6uqj7T9_p74AAvQ"

bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

# IP-–∞–¥—Ä–µ—Å
@dp.message_handler(commands=["ip"])
async def handle_ip(message: types.Message):
    ip = message.get_args()
    if not ip:
        await message.reply("‚ùó –ò—Å–ø–æ–ª—å–∑—É–π: /ip 8.8.8.8")
        return

    r = requests.get(f"https://ipinfo.io/{ip}/json")
    data = r.json()

    response = (
        f"üåê IP: {data.get('ip')}\n"
        f"üèô –ì–æ—Ä–æ–¥: {data.get('city')}\n"
        f"üåç –°—Ç—Ä–∞–Ω–∞: {data.get('country')}\n"
        f"üè¢ –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è: {data.get('org')}\n"
        f"üìç –õ–æ–∫–∞—Ü–∏—è: {data.get('loc')}"
    )
    await message.reply(response)

# Email
@dp.message_handler(commands=["email"])
async def handle_email(message: types.Message):
    email = message.get_args()
    if not email:
        await message.reply("‚ùó –ò—Å–ø–æ–ª—å–∑—É–π: /email example@gmail.com")
        return

    r = requests.get(f"https://emailrep.io/{email}")
    if r.status_code != 200:
        await message.reply("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ.")
        return

    data = r.json()
    response = (
        f"üìß Email: {email}\n"
        f"–†–µ–ø—É—Ç–∞—Ü–∏—è: {data.get('reputation')}\n"
        f"–ü—Ä–æ–≤–µ—Ä–µ–Ω: {data.get('suspicious')}\n"
        f"–ü—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ —É—Ç–µ—á–∫–∞—Ö: {data.get('references')}"
    )
    await message.reply(response)

# –¢–µ–ª–µ—Ñ–æ–Ω (–∑–∞–≥–ª—É—à–∫–∞)
@dp.message_handler(commands=["phone"])
async def handle_phone(message: types.Message):
    phone = message.get_args()
    if not phone:
        await message.reply("‚ùó –ò—Å–ø–æ–ª—å–∑—É–π: /phone +71234567890")
        return

    # PhoneInfoga —Ç—Ä–µ–±—É–µ—Ç —Å–µ—Ä–≤–µ—Ä, –∞ —Ç—É—Ç –ø—Ä–æ—Å—Ç–æ–π –æ—Ç–≤–µ—Ç-–∑–∞–≥–ª—É—à–∫–∞
    await message.reply(f"üì± –ü–æ–∏—Å–∫ –ø–æ –Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {phone}\n(–ù—É–∂–µ–Ω –≤–Ω–µ—à–Ω–∏–π —Å–∫–∞–Ω–µ—Ä ‚Äî –ø–æ–∑–∂–µ –¥–æ–±–∞–≤–∏–º)")

# Start
@dp.message_handler(commands=["start"])
async def start(message: types.Message):
    await message.reply(
        "üëã –ü—Ä–∏–≤–µ—Ç! –Ø OSINT-–±–æ—Ç.\n\n"
        "üìå –ö–æ–º–∞–Ω–¥—ã:\n"
        "/ip [IP]\n"
        "/email [–ø–æ—á—Ç–∞]\n"
        "/phone [–Ω–æ–º–µ—Ä]"
    )

if __name__ == "__main__":
    executor.start_polling(dp)
